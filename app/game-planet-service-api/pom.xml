<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.b2w</groupId>
    <artifactId>game-planet-service-api</artifactId>
    <version>1.0.0</version>
    <packaging>war</packaging>
    <name>b2w game - Planets API Services</name>
    <description>B2W Planet Game - REST Service API (docs in src/site/markdown)</description>
    <developers>
        <developer>
            <name>msa</name>
        </developer>
    </developers>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <version.java>1.8</version.java>
        <version.javaee>8.0</version.javaee>
        <version.game-planet-model>1.0.0</version.game-planet-model>
        <version.maven-compiler>3.8.1</version.maven-compiler>
        <version.maven-war>3.2.3</version.maven-war>
        <version.maven-dependency>2.6</version.maven-dependency>
        <version.maven-failsafe>2.22.2</version.maven-failsafe>
        <version.maven-jxr-plugin>3.0.0</version.maven-jxr-plugin>
        <version.maven-site>3.8.2</version.maven-site>
        <version.doxia-core>1.9</version.doxia-core>
        <version.doxia-module-markdown>1.9</version.doxia-module-markdown>
        <version.maven-project-info-reports-plugin>3.0.0</version.maven-project-info-reports-plugin>
        <version.microshed>0.9</version.microshed>
        <version.junit>5.6.0</version.junit>
        <param.fail-on-missing-web-xml>false</param.fail-on-missing-web-xml>
        <param.endorsed-dir>${project.build.directory}/endorsed</param.endorsed-dir>
        <param.test-http-server-address>localhost</param.test-http-server-address>
        <param.test-http-server-port>8080</param.test-http-server-port>
        <maven.compiler.source>${version.java}</maven.compiler.source>
        <maven.compiler.target>${version.java}</maven.compiler.target>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.b2w</groupId>
            <artifactId>game-planet-model</artifactId>
            <version>${version.game-planet-model}</version>
        </dependency>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <version>${version.javaee}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.microshed</groupId>
            <artifactId>microshed-testing-testcontainers</artifactId>
            <version>${version.microshed}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven-compiler}</version>
                <configuration>
                    <source>${version.java}</source>
                    <target>${version.java}</target>
                    <compilerArguments>
                        <endorseddirs>${param.endorsed-dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.maven-war}</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/jpa</directory>
                            <filtering>true</filtering>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${version.maven-dependency}</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-api</artifactId>
                                    <version>${version.javaee}</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>3.5.0</version>
              <configuration>
                <source>8</source>
              </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>${version.maven-site}</version>
                <configuration>
                    <extensions>true</extensions>
                    <locales>en_US, pt_BR</locales>
                    <inputEncoding>UTF-8</inputEncoding>
                    <outputEncoding>UTF-8</outputEncoding>
                    <finalName>${project.build.finalName}</finalName>
                    <jarOutputDirectory>${project.artifactId}</jarOutputDirectory>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-core</artifactId>
                        <version>${version.doxia-core}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.maven.doxia</groupId>
                        <artifactId>doxia-module-markdown</artifactId>
                        <version>${version.doxia-module-markdown}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>jaxrs-jersey</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <version.jersey>2.30.1</version.jersey> <!-- 2.30.1 -->
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-client</artifactId>
                    <version>${version.jersey}</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.media</groupId>
                    <artifactId>jersey-media-json-jackson</artifactId>
                    <version>${version.jersey}</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.core</groupId>
                    <artifactId>jersey-common</artifactId>
                    <version>${version.jersey}</version>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.jersey.inject</groupId>
                    <artifactId>jersey-hk2</artifactId>
                    <version>${version.jersey}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>jpa-eclipselink</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <param.jpa-provider>org.eclipse.persistence.jpa.PersistenceProvider</param.jpa-provider>
            </properties>
        </profile>
        <profile>
            <id>db-params-test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <param.db-server-address>localhost</param.db-server-address>
                <param.db-server-port>27017</param.db-server-port>
                <param.db-database-name>test</param.db-database-name>
            </properties>
        </profile>
        <profile>
            <id>db-params-prod</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>prod</name>
                </property>
            </activation>
            <properties>
                <param.db-server-address>localhost</param.db-server-address>
                <param.db-server-port>27017</param.db-server-port>
                <param.db-database-name>test</param.db-database-name>
            </properties>
        </profile>
        <profile>
            <id>payara-micro-no-container</id> <!-- local: cannot use podman -->
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <version.payara-micro>5.201</version.payara-micro>
                <version.payara-micro-maven>1.0.7</version.payara-micro-maven>
                <version.mongo-driver>3.12.4</version.mongo-driver>
                <version.mongo-plugin>0.4.1</version.mongo-plugin>
                <version.mongo-test>rhel80-v3.4-latest</version.mongo-test> <!-- doesn't support new versions -->
                <param.mongo-download-url>http://downloads.mongodb.org/</param.mongo-download-url>
                <param.root-path>/</param.root-path>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                    <version>${version.mongo-driver}</version>
                </dependency>
                <dependency>
                    <groupId>org.microshed</groupId>
                    <artifactId>microshed-testing-core</artifactId>
                    <version>${version.microshed}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.joelittlejohn.embedmongo</groupId>
                        <artifactId>embedmongo-maven-plugin</artifactId>
                        <version>${version.mongo-plugin}</version>
                        <executions>
                            <execution>
                                <id>start</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <bindIp>${param.db-server-address}</bindIp>  
                                    <port>${param.db-server-port}</port>        
                                    <randomPort>false</randomPort>
                                    <version>${version.mongo-test}</version> 
                                    <logFileEncoding>utf-8</logFileEncoding>  
                                    <logging>file</logging>
                                    <logFile>${project.basedir}/target/mongo.log</logFile>  
                                    <storageEngine>wiredTiger</storageEngine>
                                    <skip>false</skip>
                                    <downloadPath>${param.mongo-download-url}</downloadPath>
                                </configuration>
                            </execution>
                            <execution>
                                <id>setup</id>
                                <goals>
                                    <goal>mongo-scripts</goal>
                                </goals>
                                <configuration>
                                    <scriptsDirectory>${basedir}/src/main/mongo</scriptsDirectory>
                                    <scriptCharsetEncoding>UTF-8</scriptCharsetEncoding>
                                    <databaseName>${param.db-database-name}</databaseName>
                                </configuration>
                            </execution>
                            <execution>
                                <id>data</id>
                                <goals>
                                    <goal>mongo-import</goal>
                                </goals>
                                <configuration>
                                    <defaultImportDatabase>test</defaultImportDatabase>
                                    <parallel>false</parallel>
                                    <imports>
                                        <import>
                                            <database>${param.db-database-name}</database>
                                            <collection>planetas</collection>
                                            <file>${basedir}/src/test/mongo/planetas_2.json</file>
                                            <upsertOnImport>false</upsertOnImport>
                                            <dropOnImport>false</dropOnImport>
                                        </import>
                                        <import>
                                            <database>${param.db-database-name}</database>
                                            <collection>planetas</collection>
                                            <file>${basedir}/src/test/mongo/planetas_10000.json</file>
                                            <upsertOnImport>false</upsertOnImport>
                                            <dropOnImport>false</dropOnImport>
                                        </import>
                                    </imports>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop</id>
                                <goals>
                                    <goal>stop</goal> <!-- no tmp cleanup? -->
                                </goals>
                                <phase>post-integration-test</phase> 
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>fish.payara.maven.plugins</groupId>
                        <artifactId>payara-micro-maven-plugin</artifactId>
                        <version>${version.payara-micro-maven}</version>
                        <executions>
                            <execution>
                                <id>package-payara</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>bundle</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>pre-integration-payara</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-integration-payara</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal> <!-- not terminating process/no tmp cleanup -->
                                </goals>
                                <configuration>
                                    <artifactItem>
                                        <groupId>fish.payara.extras</groupId>
                                        <artifactId>payara-micro</artifactId>
                                        <version>${version.payara-micro}</version>
                                    </artifactItem>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <payaraVersion>${version.payara-micro}</payaraVersion>
                            <deployWar>true</deployWar>
                            <contextRoot>${param.root-path}</contextRoot>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.maven-failsafe}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <environmentVariables>
                                        <MICROSHED_TEST_ENV_CLASS>org.microshed.testing.ManuallyStartedConfiguration</MICROSHED_TEST_ENV_CLASS>
                                        <microshed_hostname>${param.test-http-server-address}</microshed_hostname>
                                        <microshed_http_port>${param.test-http-server-port}</microshed_http_port>
                                        <microshed_manual_env>true</microshed_manual_env>
                                    </environmentVariables>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>                    
                </plugins>
            </build>
        </profile>
        <profile>
            <id>payara-micro-container</id>
            <activation>
                <activeByDefault>false</activeByDefault> <!-- podman not supported -->
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.microshed</groupId>
                    <artifactId>microshed-testing-payara-micro</artifactId>
                    <version>${version.microshed}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${version.maven-jxr-plugin}</version>
            </plugin>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
</project>
